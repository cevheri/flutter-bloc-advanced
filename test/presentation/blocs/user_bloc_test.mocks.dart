// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_bloc_advance/test/presentation/blocs/user_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_bloc_advance/data/models/user.dart' as _i4;
import 'package:flutter_bloc_advance/data/repository/user_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i2.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.User?>> getUsers({
    int? page = 0,
    int? size = 10,
    List<String>? sort = const [r'id,desc'],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUsers,
          [],
          {
            #page: page,
            #size: size,
            #sort: sort,
          },
        ),
        returnValue: _i3.Future<List<_i4.User?>>.value(<_i4.User?>[]),
      ) as _i3.Future<List<_i4.User?>>);

  @override
  _i3.Future<_i4.User?> getUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<_i4.User?> getUserByLogin(String? login) => (super.noSuchMethod(
        Invocation.method(
          #getUserByLogin,
          [login],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<_i4.User?> createUser(_i4.User? user) => (super.noSuchMethod(
        Invocation.method(
          #createUser,
          [user],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<List<_i4.User>> listUser(
    int? rangeStart,
    int? rangeEnd, {
    List<String>? sort = const [r'id,desc'],
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #listUser,
          [
            rangeStart,
            rangeEnd,
          ],
          {#sort: sort},
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);

  @override
  _i3.Future<List<_i4.User>> findUserByAuthority(
    int? rangeStart,
    int? rangeEnd,
    String? authority,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findUserByAuthority,
          [
            rangeStart,
            rangeEnd,
            authority,
          ],
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);

  @override
  _i3.Future<List<_i4.User>> findUserByName(
    int? rangeStart,
    int? rangeEnd,
    String? name,
    String? authority,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #findUserByName,
          [
            rangeStart,
            rangeEnd,
            name,
            authority,
          ],
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);

  @override
  _i3.Future<_i4.User?> updateUser(_i4.User? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i3.Future<_i4.User?>.value(),
      ) as _i3.Future<_i4.User?>);

  @override
  _i3.Future<void> deleteUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteUser,
          [id],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
