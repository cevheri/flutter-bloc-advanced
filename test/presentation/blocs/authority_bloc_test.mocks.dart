// Mocks generated by Mockito 5.4.5 from annotations
// in flutter_bloc_advance/test/presentation/blocs/authority_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutter_bloc_advance/data/models/authority.dart' as _i4;
import 'package:flutter_bloc_advance/data/repository/authority_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthorityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthorityRepository extends _i1.Mock
    implements _i2.AuthorityRepository {
  MockAuthorityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Authority?> create(_i4.Authority? authority) =>
      (super.noSuchMethod(
            Invocation.method(#create, [authority]),
            returnValue: _i3.Future<_i4.Authority?>.value(),
          )
          as _i3.Future<_i4.Authority?>);

  @override
  _i3.Future<List<String?>> list() =>
      (super.noSuchMethod(
            Invocation.method(#list, []),
            returnValue: _i3.Future<List<String?>>.value(<String?>[]),
          )
          as _i3.Future<List<String?>>);

  @override
  _i3.Future<_i4.Authority?> retrieve(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#retrieve, [id]),
            returnValue: _i3.Future<_i4.Authority?>.value(),
          )
          as _i3.Future<_i4.Authority?>);

  @override
  _i3.Future<void> delete(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#delete, [id]),
            returnValue: _i3.Future<void>.value(),
            returnValueForMissingStub: _i3.Future<void>.value(),
          )
          as _i3.Future<void>);
}
